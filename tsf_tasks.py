# -*- coding: utf-8 -*-
"""TSF TASKS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17ypXOKsMxItZLQpzbVyDpp4m5cuLrJvN

# Data Science & Buisness Analytics at The Sparks Foundation

# **Done by SHAIK MOHAMMED KHASIM SOHAIL**

**TASK 1 : Prediction using Supervised ML**

Goal : Predict the percentage of student based on the no. of study hours
"""

#importing required libraries
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

score_data=pd.read_csv("http://bit.ly/w-data")
#to find the no.of row & columns in data 
score_data.shape

#printing the data
score_data.head(25)

"""# **Preparing The Data**"""

#preparing data
x = score_data.Hours
y = score_data.Scores

#showing the relationship between hours & score
plt.title('Hours vs Scores')
plt.xlabel("Hours")
plt.ylabel("scores")
plt.scatter(x, y)
plt.show()

"""# **splitting data into training & testing set**"""

#splitting data into training & testing set
from sklearn.linear_model import LinearRegression 
from sklearn.model_selection import train_test_split as tts
x_train, x_test, y_train, y_test =tts(x, y, test_size=0.2, random_state=0)

#training the data
reg = LinearRegression()
reg.fit(x_train, y_train)p

"""# **Plotting the regression line**"""

#showing the regression line
z=reg.coef_ * x+reg.intercept_
score_data.plot(x='Hours', y='Scores', style='o')
plt.scatter(x, y)
plt.plot(x, z)
plt.show

"""# **Making predictions**"""

print(x_test)
y_pred = reg.predict(x_test)

"""# **Comparison between Predicted & actual values**"""

pred = pd.DataFrame({'Actual scores': y_test, 'Predicted scores': y_pred})
print(pred)

"""# **Score prediction if a student studies for 9.2 hours per day**"""

pred = reg.predict([[9.5]])[0]
print('predicted Percentage:', pred)

"""# **Evaluating the Model**"""

from sklearn.metrics import mean_absolute_error
mae= mean_absolute_error(y_test, y_pred)
print(mae)